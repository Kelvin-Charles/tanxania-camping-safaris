{"ast":null,"code":"import axios from 'axios';\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Package Management\nexport const packageApi = {\n  getAll: () => api.get('/packages'),\n  getById: id => api.get(`/packages/${id}`),\n  create: data => api.post('/packages', data),\n  update: (id, data) => api.put(`/packages/${id}`, data),\n  delete: id => api.delete(`/packages/${id}`),\n  updateImage: (id, formData) => api.post(`/packages/${id}/image`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Category Management\nexport const categoryApi = {\n  getAll: () => api.get('/categories'),\n  getById: id => api.get(`/categories/${id}`),\n  create: data => api.post('/categories', data),\n  update: (id, data) => api.put(`/categories/${id}`, data),\n  delete: id => api.delete(`/categories/${id}`)\n};\n\n// Park Management\nexport const parkApi = {\n  getAll: () => api.get('/parks'),\n  getById: id => api.get(`/parks/${id}`),\n  create: data => api.post('/parks', data),\n  update: (id, data) => api.put(`/parks/${id}`, data),\n  delete: id => api.delete(`/parks/${id}`),\n  updateImage: (id, formData) => api.post(`/parks/${id}/image`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Booking Management\nexport const bookingApi = {\n  getAll: () => api.get('/bookings'),\n  getById: id => api.get(`/bookings/${id}`),\n  update: (id, data) => api.put(`/bookings/${id}`, data),\n  delete: id => api.delete(`/bookings/${id}`),\n  updateStatus: (id, status) => api.patch(`/bookings/${id}/status`, {\n    status\n  })\n};\n\n// Enquiry Management\nexport const enquiryApi = {\n  getAll: () => api.get('/enquiries'),\n  getById: id => api.get(`/enquiries/${id}`),\n  update: (id, data) => api.put(`/enquiries/${id}`, data),\n  delete: id => api.delete(`/enquiries/${id}`),\n  updateStatus: (id, status) => api.patch(`/enquiries/${id}/status`, {\n    status\n  })\n};\n\n// Settings Management\nexport const settingsApi = {\n  get: () => api.get('/settings'),\n  update: data => api.put('/settings', data)\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","packageApi","getAll","get","getById","id","data","post","update","put","delete","updateImage","formData","categoryApi","parkApi","bookingApi","updateStatus","patch","enquiryApi","settingsApi"],"sources":["/media/safezone/New Volume/projcts/v2/manage/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Package Management\nexport const packageApi = {\n  getAll: () => api.get('/packages'),\n  getById: (id) => api.get(`/packages/${id}`),\n  create: (data) => api.post('/packages', data),\n  update: (id, data) => api.put(`/packages/${id}`, data),\n  delete: (id) => api.delete(`/packages/${id}`),\n  updateImage: (id, formData) => api.post(`/packages/${id}/image`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  })\n};\n\n// Category Management\nexport const categoryApi = {\n  getAll: () => api.get('/categories'),\n  getById: (id) => api.get(`/categories/${id}`),\n  create: (data) => api.post('/categories', data),\n  update: (id, data) => api.put(`/categories/${id}`, data),\n  delete: (id) => api.delete(`/categories/${id}`)\n};\n\n// Park Management\nexport const parkApi = {\n  getAll: () => api.get('/parks'),\n  getById: (id) => api.get(`/parks/${id}`),\n  create: (data) => api.post('/parks', data),\n  update: (id, data) => api.put(`/parks/${id}`, data),\n  delete: (id) => api.delete(`/parks/${id}`),\n  updateImage: (id, formData) => api.post(`/parks/${id}/image`, formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  })\n};\n\n// Booking Management\nexport const bookingApi = {\n  getAll: () => api.get('/bookings'),\n  getById: (id) => api.get(`/bookings/${id}`),\n  update: (id, data) => api.put(`/bookings/${id}`, data),\n  delete: (id) => api.delete(`/bookings/${id}`),\n  updateStatus: (id, status) => api.patch(`/bookings/${id}/status`, { status })\n};\n\n// Enquiry Management\nexport const enquiryApi = {\n  getAll: () => api.get('/enquiries'),\n  getById: (id) => api.get(`/enquiries/${id}`),\n  update: (id, data) => api.put(`/enquiries/${id}`, data),\n  delete: (id) => api.delete(`/enquiries/${id}`),\n  updateStatus: (id, status) => api.patch(`/enquiries/${id}/status`, { status })\n};\n\n// Settings Management\nexport const settingsApi = {\n  get: () => api.get('/settings'),\n  update: (data) => api.put('/settings', data)\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
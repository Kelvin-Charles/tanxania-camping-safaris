{"ast":null,"code":"import axios from 'axios';\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n\n  // If the error status is 401 and there is no originalRequest._retry flag,\n  // it means the token has expired and we need to refresh it\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No refresh token available');\n      }\n      const response = await api.post('/auth/refresh');\n      const {\n        token: newToken\n      } = response.data;\n      localStorage.setItem('token', newToken);\n      api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n      return api(originalRequest);\n    } catch (error) {\n      // If refresh token fails, redirect to login\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n      return Promise.reject(error);\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Package Management\nexport const packageApi = {\n  getAll: () => api.get('/packages'),\n  getById: id => api.get(`/packages/${id}`),\n  create: data => api.post('/packages', data),\n  update: (id, data) => api.put(`/packages/${id}`, data),\n  delete: id => api.delete(`/packages/${id}`),\n  updateImage: (id, formData) => api.post(`/packages/${id}/image`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Category Management\nexport const categoryApi = {\n  getAll: () => api.get('/categories'),\n  getById: id => api.get(`/categories/${id}`),\n  create: data => api.post('/categories', data),\n  update: (id, data) => api.put(`/categories/${id}`, data),\n  delete: id => api.delete(`/categories/${id}`)\n};\n\n// Park Management\nexport const parkApi = {\n  getAll: () => api.get('/parks'),\n  getById: id => api.get(`/parks/${id}`),\n  create: data => api.post('/parks', data),\n  update: (id, data) => api.put(`/parks/${id}`, data),\n  delete: id => api.delete(`/parks/${id}`),\n  updateImage: (id, formData) => api.post(`/parks/${id}/image`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Booking Management\nexport const bookingApi = {\n  getAll: () => api.get('/bookings'),\n  getById: id => api.get(`/bookings/${id}`),\n  update: (id, data) => api.put(`/bookings/${id}`, data),\n  delete: id => api.delete(`/bookings/${id}`),\n  updateStatus: (id, status) => api.patch(`/bookings/${id}/status`, {\n    status\n  })\n};\n\n// Enquiry Management\nexport const enquiryApi = {\n  getAll: () => api.get('/enquiries'),\n  getById: id => api.get(`/enquiries/${id}`),\n  update: (id, data) => api.put(`/enquiries/${id}`, data),\n  delete: id => api.delete(`/enquiries/${id}`),\n  updateStatus: (id, status) => api.patch(`/enquiries/${id}/status`, {\n    status\n  })\n};\n\n// Settings Management\nexport const settingsApi = {\n  get: () => api.get('/settings'),\n  update: data => api.put('/settings', data)\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","originalRequest","status","_retry","Error","post","newToken","data","setItem","defaults","common","removeItem","window","location","href","packageApi","getAll","get","getById","id","update","put","delete","updateImage","formData","categoryApi","parkApi","bookingApi","updateStatus","patch","enquiryApi","settingsApi"],"sources":["/media/safezone/New Volume/projcts/v2/manage/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    // If the error status is 401 and there is no originalRequest._retry flag,\n    // it means the token has expired and we need to refresh it\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('No refresh token available');\n        }\n\n        const response = await api.post('/auth/refresh');\n        const { token: newToken } = response.data;\n\n        localStorage.setItem('token', newToken);\n        api.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n\n        return api(originalRequest);\n      } catch (error) {\n        // If refresh token fails, redirect to login\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n        return Promise.reject(error);\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// Package Management\nexport const packageApi = {\n  getAll: () => api.get('/packages'),\n  getById: (id) => api.get(`/packages/${id}`),\n  create: (data) => api.post('/packages', data),\n  update: (id, data) => api.put(`/packages/${id}`, data),\n  delete: (id) => api.delete(`/packages/${id}`),\n  updateImage: (id, formData) => api.post(`/packages/${id}/image`, formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  })\n};\n\n// Category Management\nexport const categoryApi = {\n  getAll: () => api.get('/categories'),\n  getById: (id) => api.get(`/categories/${id}`),\n  create: (data) => api.post('/categories', data),\n  update: (id, data) => api.put(`/categories/${id}`, data),\n  delete: (id) => api.delete(`/categories/${id}`)\n};\n\n// Park Management\nexport const parkApi = {\n  getAll: () => api.get('/parks'),\n  getById: (id) => api.get(`/parks/${id}`),\n  create: (data) => api.post('/parks', data),\n  update: (id, data) => api.put(`/parks/${id}`, data),\n  delete: (id) => api.delete(`/parks/${id}`),\n  updateImage: (id, formData) => api.post(`/parks/${id}/image`, formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  })\n};\n\n// Booking Management\nexport const bookingApi = {\n  getAll: () => api.get('/bookings'),\n  getById: (id) => api.get(`/bookings/${id}`),\n  update: (id, data) => api.put(`/bookings/${id}`, data),\n  delete: (id) => api.delete(`/bookings/${id}`),\n  updateStatus: (id, status) => api.patch(`/bookings/${id}/status`, { status })\n};\n\n// Enquiry Management\nexport const enquiryApi = {\n  getAll: () => api.get('/enquiries'),\n  getById: (id) => api.get(`/enquiries/${id}`),\n  update: (id, data) => api.put(`/enquiries/${id}`, data),\n  delete: (id) => api.delete(`/enquiries/${id}`),\n  updateStatus: (id, status) => api.patch(`/enquiries/${id}/status`, { status })\n};\n\n// Settings Management\nexport const settingsApi = {\n  get: () => api.get('/settings'),\n  update: (data) => api.put('/settings', data)\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
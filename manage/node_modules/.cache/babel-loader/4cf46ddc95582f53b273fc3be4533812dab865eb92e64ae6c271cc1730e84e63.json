{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost/tanzania/php-backend/public/api',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Add a request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authApi = {\n  login: credentials => api.post('/auth/login', credentials),\n  logout: () => api.post('/auth/logout'),\n  me: () => api.get('/auth/me')\n};\n\n// Package API endpoints\nexport const packageApi = {\n  getAll: () => api.get('/packages'),\n  getById: id => api.get(`/packages/${id}`),\n  create: data => {\n    console.log('Creating package with data:', data);\n    return api.post('/packages', {\n      title: data.title,\n      description: data.description,\n      price: parseFloat(data.price),\n      duration: data.duration,\n      best_time: data.bestTime,\n      group_size: data.groupSize,\n      categories: data.categories,\n      parks: data.parks,\n      highlights: data.highlights,\n      itinerary: data.itinerary\n    });\n  },\n  update: (id, data) => api.put(`/packages/${id}`, data),\n  delete: id => api.delete(`/packages/${id}`),\n  updateImage: (id, formData) => api.post(`/packages/${id}/image`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Category API endpoints\nexport const categoryApi = {\n  getAll: () => api.get('/categories'),\n  getById: id => api.get(`/categories/${id}`),\n  create: data => api.post('/categories', data),\n  update: (id, data) => api.put(`/categories/${id}`, data),\n  delete: id => api.delete(`/categories/${id}`)\n};\n\n// Park API endpoints\nexport const parkApi = {\n  getAll: () => api.get('/parks'),\n  getById: id => api.get(`/parks/${id}`),\n  create: data => api.post('/parks', data),\n  update: (id, data) => api.put(`/parks/${id}`, data),\n  delete: id => api.delete(`/parks/${id}`),\n  updateImage: (id, formData) => api.post(`/parks/${id}/image`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Booking Management\nexport const bookingApi = {\n  getAll: () => api.get('/bookings'),\n  getById: id => api.get(`/bookings/${id}`),\n  update: (id, data) => api.put(`/bookings/${id}`, data),\n  delete: id => api.delete(`/bookings/${id}`),\n  updateStatus: (id, status) => api.patch(`/bookings/${id}/status`, {\n    status\n  })\n};\n\n// Enquiry Management\nexport const enquiryApi = {\n  getAll: () => api.get('/enquiries'),\n  getById: id => api.get(`/enquiries/${id}`),\n  update: (id, data) => api.put(`/enquiries/${id}`, data),\n  delete: id => api.delete(`/enquiries/${id}`),\n  updateStatus: (id, status) => api.patch(`/enquiries/${id}/status`, {\n    status\n  })\n};\n\n// Settings Management\nexport const settingsApi = {\n  get: () => api.get('/settings'),\n  update: data => api.put('/settings', data)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authApi","login","credentials","post","logout","me","get","packageApi","getAll","getById","id","data","console","log","title","description","price","parseFloat","duration","best_time","bestTime","group_size","groupSize","categories","parks","highlights","itinerary","update","put","delete","updateImage","formData","categoryApi","parkApi","bookingApi","updateStatus","patch","enquiryApi","settingsApi"],"sources":["/media/safezone/New Volume/projcts/v2/manage/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost/tanzania/php-backend/public/api',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Add a request interceptor\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authApi = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  logout: () => api.post('/auth/logout'),\n  me: () => api.get('/auth/me'),\n};\n\n// Package API endpoints\nexport const packageApi = {\n  getAll: () => api.get('/packages'),\n  getById: (id) => api.get(`/packages/${id}`),\n  create: (data) => {\n    console.log('Creating package with data:', data);\n    return api.post('/packages', {\n      title: data.title,\n      description: data.description,\n      price: parseFloat(data.price),\n      duration: data.duration,\n      best_time: data.bestTime,\n      group_size: data.groupSize,\n      categories: data.categories,\n      parks: data.parks,\n      highlights: data.highlights,\n      itinerary: data.itinerary\n    });\n  },\n  update: (id, data) => api.put(`/packages/${id}`, data),\n  delete: (id) => api.delete(`/packages/${id}`),\n  updateImage: (id, formData) => api.post(`/packages/${id}/image`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\n\n// Category API endpoints\nexport const categoryApi = {\n  getAll: () => api.get('/categories'),\n  getById: (id) => api.get(`/categories/${id}`),\n  create: (data) => api.post('/categories', data),\n  update: (id, data) => api.put(`/categories/${id}`, data),\n  delete: (id) => api.delete(`/categories/${id}`)\n};\n\n// Park API endpoints\nexport const parkApi = {\n  getAll: () => api.get('/parks'),\n  getById: (id) => api.get(`/parks/${id}`),\n  create: (data) => api.post('/parks', data),\n  update: (id, data) => api.put(`/parks/${id}`, data),\n  delete: (id) => api.delete(`/parks/${id}`),\n  updateImage: (id, formData) => api.post(`/parks/${id}/image`, formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  })\n};\n\n// Booking Management\nexport const bookingApi = {\n  getAll: () => api.get('/bookings'),\n  getById: (id) => api.get(`/bookings/${id}`),\n  update: (id, data) => api.put(`/bookings/${id}`, data),\n  delete: (id) => api.delete(`/bookings/${id}`),\n  updateStatus: (id, status) => api.patch(`/bookings/${id}/status`, { status })\n};\n\n// Enquiry Management\nexport const enquiryApi = {\n  getAll: () => api.get('/enquiries'),\n  getById: (id) => api.get(`/enquiries/${id}`),\n  update: (id, data) => api.put(`/enquiries/${id}`, data),\n  delete: (id) => api.delete(`/enquiries/${id}`),\n  updateStatus: (id, status) => api.patch(`/enquiries/${id}/status`, { status })\n};\n\n// Settings Management\nexport const settingsApi = {\n  get: () => api.get('/settings'),\n  update: (data) => api.put('/settings', data)\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}